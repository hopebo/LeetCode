// 寻找字符串字母不一样的位置
class Solution {
public:
    bool buddyStrings(string A, string B) {
        int i = 0;
        bool duplicate = false;
        int letter[26] = { 0 };
        while (i < A.size() && A[i] == B[i]) {
            if (!duplicate) {
                if (letter[A[i] - 'a'] != 0) {
                    duplicate = true;
                } else {
                    letter[A[i] - 'a']++;
                }
            }
            i++;
        }
        if (i >= A.size()) {
            return duplicate;
        }
        int j = i + 1;
        while (j < A.size() && A[j] == B[j]) {
            j++;
        }
        if (j >= A.size() || A[j] != B[i] || A[i] != B[j]) {
            return false;
        }
        j++;
        while (j < A.size() && A[j] == B[j]) {
            j++;
        }
        return j >= A.size();
    }
};
