// BFS搜索，优先改变最左边不匹配的字符
class Solution {
public:
    int kSimilarity(string A, string B) {
        if (A == B) {
            return 0;
        }
        int step = 0;
        queue<string> transfer;
        transfer.push(A);
        while (!transfer.empty()) {
            step++;
            int len = transfer.size();
            for (int i = 0; i < len; i++) {
                string A_transfer = transfer.front();
                transfer.pop();
                int j = 0;
                while (j < A_transfer.size() && A_transfer[j] == B[j]) {
                    j++;
                }
                int k = j + 1;
                while (k < A_transfer.size()) {
                    if (A_transfer[k] != B[k] && A_transfer[k] == B[j]) {
                        string temp = A_transfer;
                        swap(temp[j], temp[k]);
                        if (temp == B) {
                            return step;
                        }
                        transfer.push(temp);
                    }
                    k++;
                }
            }
        }
        return -1;
    }
};
