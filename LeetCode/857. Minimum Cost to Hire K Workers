// 以每一个员工的工资质量比为界限，寻找比其小的员工quality和最小的
class Solution {
public:
    double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int K) {
        vector<pair<double, int>> ratio;
        for (int i = 0; i < wage.size(); i++) {
            ratio.push_back(pair<double, int>((double)wage[i] / quality[i], quality[i]));
        }
        sort(ratio.begin(), ratio.end());
        priority_queue<int> pq;
        int qsum = 0;
        double res = INT_MAX;
        for (int i = 0; i < ratio.size(); i++) {
            pq.push(ratio[i].second);
            qsum += ratio[i].second;
            if (i >= K) {
                qsum -= pq.top();
                pq.pop();
            }
            if (i >= K - 1) {
                res = min(res, qsum * ratio[i].first);
            }
        }
        return res;
    }
};
